import Predicate from '../Predicate';
import { DefaultValue } from '../types';
export default class NumberPredicate<T extends number = number> extends Predicate<T> {
    constructor(defaultValue?: DefaultValue<T>);
    between(min: number, max: number, inclusive?: boolean): this;
    cast(value: unknown): T;
    float(): this;
    gt(min: number, inclusive?: boolean): this;
    gte(min: number): this;
    int(): this;
    lt(max: number, inclusive?: boolean): this;
    lte(max: number): this;
    negative(): this;
    oneOf<U extends number>(list: U[]): NumberPredicate<U>;
    positive(): this;
}
export declare function number<T extends number = number>(defaultValue?: DefaultValue<number>): NumberPredicate<T>;
