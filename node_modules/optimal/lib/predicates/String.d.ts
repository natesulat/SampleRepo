import CollectionPredicate from './Collection';
import { DefaultValue } from '../types';
export default class StringPredicate<T extends string = string> extends CollectionPredicate<T> {
    constructor(defaultValue?: DefaultValue<T>);
    camelCase(): this;
    cast(value: unknown): T;
    contains(token: string, index?: number): this;
    kebabCase(): this;
    lowerCase(): this;
    match(pattern: RegExp, message?: string): this;
    notEmpty(): this;
    oneOf<U extends string>(list: U[]): StringPredicate<U>;
    pascalCase(): this;
    snakeCase(): this;
    upperCase(): this;
}
export declare function string<T extends string = string>(defaultValue?: DefaultValue<string>): StringPredicate<T>;
